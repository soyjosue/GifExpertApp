{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAiCeA,EA9BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAevC,OACE,sBAAMC,SAVa,SAAAC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAQT,EACRU,SAhBoB,SAAAP,GAAC,OAAIF,EAAcE,EAAEQ,OAAOF,a,+BCN3CG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEfC,EAFe,0FAE2EC,UAAUH,GAFrF,sBAGGI,MAAOF,GAHV,cAGfG,EAHe,gBAIEA,EAAUC,OAJZ,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVjB,kBAcdM,GAdc,4CAAH,sDCWLO,EAVK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAE5B,OACE,sBAAKc,UAAU,2DAAf,UACE,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAKA,EAAL,WCsBSO,EAxBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFN,SAAEA,GAAe,IAAD,EAEhBd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAmB1C,OAZAC,qBAAW,WAETxB,EAASC,GACNwB,MAAM,SAAAC,GACLH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAId,IAEIC,EDf0BK,CAAc1B,GAAlCa,EAFmB,EAExBN,KAAaa,EAFW,EAEXA,QAErB,OACE,qCACE,qBAAIJ,UAAU,sDAAd,cAAsEhB,EAAtE,OAEEoB,GAAW,mBAAGJ,UAAU,qDAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAK,SAACC,GAAD,OACV,cAAC,EAAD,eAEOA,GADAA,EAAIC,aEURgB,EAxBM,WAAO,IAAD,EAEazC,mBAAU,CAAC,cAFxB,mBAEjB0C,EAFiB,KAEL3C,EAFK,KAIzB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEI2C,EAAWnB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEEA,SAAUA,GADLA,Y,MCZnB6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3b466d00.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n  const [inputValue, setInputValue] = useState(''); // ''\r\n\r\n  const handleInputChange = e => setInputValue(e.target.value);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if ( inputValue.trim().length > 2 ) {\r\n      setCategories(cats => [inputValue, ...cats]);\r\n      setInputValue('');\r\n    }\r\n  }\r\n\r\n  return(\r\n    <form onSubmit={ handleSubmit }>\r\n      <input \r\n        type=\"text\"\r\n        value={ inputValue }\r\n        onChange={ handleInputChange }\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","\r\nexport const getGifs = async ( category ) => {\r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=JRhaOyzbHhah2RAY8vNwpdh1gHG8Bubm&q=${ encodeURI(category) }&Limit=10`;\r\n  const respuesta = await fetch( url );\r\n  const { data } = await respuesta.json();\r\n\r\n  const gifs = data.map( img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  })\r\n\r\n  return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn animate__delay-2s\">\r\n      <img src={ url } alt={ title } />\r\n      <p> {title} </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifGridItem;","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n  const { data:images, loading } = useFetchGifs( category );\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn animate__delay-2s\"> {category} </h3>\r\n\r\n      { loading && <p className=\"animate__animated animate__flash animate__delay-2s\">Loading</p> }\r\n\r\n      <div className=\"card-grid\">\r\n        {\r\n          images.map( (img) => (\r\n            <GifGridItem \r\n              key={img.id}\r\n              { ...img }\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GifGrid;","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs'; \r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect( () => {\r\n     \r\n    getGifs( category )\r\n      .then( imgs => {\r\n        setState({\r\n          data: imgs,\r\n          loading: false\r\n        })\r\n      } )\r\n  \r\n  }, [ ])\r\n\r\n  return state; // { data:[], loading: true };\r\n} \r\n","import React, { useState } from 'react';\r\n\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [ categories, setCategories ] = useState( ['One Punch'] );\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr /> \r\n\r\n      <ol>\r\n        {\r\n          categories.map( category => (\r\n            <GifGrid \r\n              key={category} \r\n              category={category} \r\n            />\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// GifExpertApp\n// <h2>GifExpertApp</h2>\n// <hr />"],"sourceRoot":""}